<?php

/** 
 * If running thru command line, 
 * ie, php -S localhost:8080
 * -- (This cmd is run on directory with index.php)
 * This (I think) prints errors to cmd line.
 * Otherwise, they will just kinda disappear.
 * This can probably be written to a file using Monolog.
*/
ini_set('display_errors', true);

/**
 * This is the autoloader generated by composer.
 * Path may need to be adjusted, since somehow,
 * and for some reason, I don't need the __DIR__ var.
 * Who knows....
*/
require '../vendor/autoload.php';

/**
 * Some simple use statements, to cut down on typing later, really.
 * In the $app->get() call, checkout Request and Response,
 * Instead of \Psr\Http\Message\etc\etc...
*/
use \Psr\Http\Message\ServerRequestInterface as Request;
use \Psr\Http\Message\ResponseInterface as Response;
use \Slim\App;

/**
 * set up array to use for settings of the container that 
 * we instantiate on line 49
*/
$settings = array(
	'view' => array(
		'template_path' => '../templates/',
		'twig' => array(
			'cache' => false,
			'debug' => true,
			'auto_reload' => true,
		),
	),
);

/**
 *
 * instantiate a new container to supply the \Slim\App
*/
$container = new Slim\Container($settings);

/**
 * Create new container service for Twig-Views.
 * ... I'll have to come back to this one...
*/
$container['views'] = function($c){
	$path = $c->get('view')['template_path'];
	$opt = $c->get('view')['twig'];
	return new Slim\Views\Twig($path, $opt);
};

/**
 * 
 * Instantiate the \Slim\App
*/
$app = new App($container);

/**
 * 
 * We add a route for the about page
*/
$app->get('/', function (Request $request, Response $response, $args) {
	return $this->views->render($response, 'home.twig');
});
$app->run();